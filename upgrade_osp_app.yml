---
- hosts: all
  remote_user: mako
  vars:
    bash_profile: "/home/{{ ansible_ssh_user }}/.bash_profile"
    osp_app_directory: "/home/{{ ansible_ssh_user }}/osp-app/"
    default_branch: "0.16-stable"

  tasks:
    - name: Stashing changes
      command: git stash
      args:
        chdir: "{{ osp_app_directory }}"
      register: stash

    - name: Fetching changes
      command: git fetch origin
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Checking out changes
      command: git checkout {{ default_branch }}
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Pulling changes
      command: git pull
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Setting ruby version
      shell: "cat .ruby-version"
      args:
        chdir: "{{ osp_app_directory }}"
      register: shell_output

    - name: Storing ruby version
      set_fact:
        ruby_version: "{{ shell_output.stdout }}"

    - name: Setting bundler version
      shell: "cat Gemfile.lock | tail -1 | tr -d \" \""
      args:
        chdir: "{{ osp_app_directory }}"
      register: shell_output

    - name: Storing bundler version
      set_fact:
        bundler_version: "{{ shell_output.stdout }}"

    - name: Poping changes
      command: git stash pop
      args:
        chdir: "{{ osp_app_directory }}"
      when: stash.stdout != "No local changes to save"

    - name: Updating ruby if necessary
      command: rbenv install "{{ ruby_version }}" -s
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Set ruby shell version
      command: bash -lc "rbenv shell \"{{ ruby_version }}\""

    - name: Install bundler
      command: 'bash -lc "gem install bundler -v \"{{ bundler_version }}\""'
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Install gemfile
      command: bash -lc "bundle install --path vendor/bundle"
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Run migration
      command: bash -lc "RAILS_ENV=production bundle exec rake db:migrate"
      args:
        chdir: "{{ osp_app_directory }}"

    - name: precompile assets
      command: bash -lc "RAILS_ENV=production bundle exec rake assets:precompile"
      args:
        chdir: "{{ osp_app_directory }}"

    - name: Restart sidekiq service
      command: systemctl restart sidekiq
      become: yes
      become_user: root
      become_method: sudo

    - name: Restart nginx
      command: systemctl reload nginx
      become: yes
      become_user: root
      become_method: sudo
